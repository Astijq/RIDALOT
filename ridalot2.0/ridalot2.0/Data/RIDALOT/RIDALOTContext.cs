// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ridalot2._0.Data.RIDALOT
{
    public partial class RIDALOTContext : DbContext
    {
        public RIDALOTContext()
        {
        }

        public RIDALOTContext(DbContextOptions<RIDALOTContext> options)
            : base(options)
        {
        }
        //public virtual Lazy<DbSet<Posts>> Posts { get; set; }
        public virtual DbSet<Posts> Posts { get; set; }
        public virtual DbSet<Images> Images { get; set; }
        public virtual DbSet<Workers> Workers { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Entity<Posts>(entity =>
            {
                entity.HasKey(e => e.Id);

                entity.Property(e => e.AddressLat).HasMaxLength(50);

                entity.Property(e => e.AddressLng).HasMaxLength(50);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.User).HasMaxLength(50);

                entity.Property(e => e.Worker).HasMaxLength(50);

                entity.Property(e => e.Distance).HasMaxLength(30);
            });

            modelBuilder.Entity<Images>(entity =>
            {
                entity.HasKey(e => e.Id);

                entity.Property(e => e.ImagePath).IsRequired();

                entity.HasOne(e => e.Posts).WithMany(p => p.Images);
            });

            modelBuilder.Entity<Workers>(entity =>
            {
                entity.HasKey(e => e.Id);

                entity.Property(e => e.Email).IsRequired();

                entity.Property(e => e.FirstName);

                entity.Property(e => e.LastName);

                entity.Property(e => e.BirthDate);

                entity.Property(e => e.Phone);

                entity.Property(e => e.Description);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
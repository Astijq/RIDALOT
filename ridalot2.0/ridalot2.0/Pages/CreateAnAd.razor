@page "/createad"
@using Microsoft.Extensions.Logging
@inject ILogger<CreateAnAd> Logger

<h3>Create an Ad</h3>
    <div>
        <InputFile OnChange="@OnFileSelection" multiple></InputFile>
        <p>

        </p>
        <div class="row">
            @foreach (var imgUrl in @imgUrls)
            {
                <img src="@imgUrl" style="height:200px;max-width:500px;width: auto;" />
            }
        </div>
    </div>

    <p>

        Description:
    </p>

    <p>
        <label>
            <textarea type="text" style=" min-width:500px; max-width:100%;min-height:50px;height:100%;width:100%;" @bind="description" />
        </label>
    </p>

    <p>
        Height (cm):
        <input type="number" @bind="height" />
    </p>
    <p>
        Width (cm):
        <input type="number" @bind="width" />
    </p>
    <p>
        Length (cm):
        <input type="number" @bind="length" />
    </p>
    <p>
        Weight (kg):
        <input type="number" @bind="weight" />
    </p>
    <p>
        <button type="submit" class="btn btn-success" onclick="@Clicked">Submit</button>
    </p>

@code {
    private List<IBrowserFile> loadedFiles = new();
    private long maxFileSize = 1024 * 15;
    private int maxAllowedFiles = 3, height, width, length, weight;
    private bool isLoading, save = false;
    private String description = "write here", LastSubmitResult;
    List<string> imgUrls = new List<string>();

    private async Task OnFileSelection(InputFileChangeEventArgs e)
    {
        foreach (IBrowserFile imgFile in e.GetMultipleFiles(5))
        {
            var buffers = new byte[imgFile.Size];
            await imgFile.OpenReadStream().ReadAsync(buffers);
            string imageType = imgFile.ContentType;
            string imgUrl = $"data:{imageType};base64,{Convert.ToBase64String(buffers)}";
            imgUrls.Add(imgUrl);
        }
    }

    private void Clicked()
    {

    }
    
}
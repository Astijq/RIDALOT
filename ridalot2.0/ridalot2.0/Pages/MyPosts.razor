@page "/myposts"
@using Data
@using ridalot2._0.Data.RIDALOT
@inherits LoginControl

<h3>MyPosts</h3>
	<table class="table">
		<thead>
			<tr>
				<th>Posted</th>
				<th>Image</th>
				<th>Description</th>
				<th>Measurements</th>
				<th>Estimated price</th>
				<th>Adress</th>
				<th>Edit post</th>
			</tr>
		</thead>

		<Virtualize Context="post" Items="@posts">
			<tbody>
				<tr>
					<td>@post.Date</td>
				<td><img src="@getImages(post)" style="height:100px; max-width: 200px;" /></td>
					<td>@post.Description</td>
					<td>
						Weight: @post.Weight<br />
						Height: @post.Height<br />
						Width: @post.Width<br />
						Length: @post.Length<br />
					</td>
					<td>@post.AddressLat @post.AddressLng</td>
					<td>@post.Pay</td>
					<td><button type="submit" class="btn btn-info btn-sm" style=@Constants.button @onclick="(()=>Clicked(post))">Delete</button></td>
				</tr>
			</tbody>
		</Virtualize>
	</table>

@code {
	List<Posts> posts = new List<Posts>();
	List<Images> img = new List<Images>();

	protected override async Task OnInitializedAsync()
	{
		posts = await @Service.GetMyPostsAsync(c.Email);
		img = await @Service.GetImagesAsync();
	}

	async Task Clicked(Posts post)
	{
		var result = @Service.DeletePostAsync(post);
		posts =
		await @Service.GetMyPostsAsync(c.Email);
	}

	public String getImages(Posts post)
	{
		List<Images> temp = new List<Images>();

		Console.WriteLine(img.Count());

		temp = img.Where(x => x.Posts.Id == post.Id).ToList();

		Console.WriteLine(temp.Count);

		if (temp.Count > 0)
		{
			Console.WriteLine(temp.First().ImagePath);
			return temp.First().ImagePath;
		}
		else return "";
	}
}

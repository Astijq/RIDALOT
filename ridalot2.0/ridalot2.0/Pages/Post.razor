@page "/post/{id:int}"
@using Microsoft.AspNetCore.WebUtilities
@using ridalot2._0.Data.RIDALOT
@using ridalot2._0.Data
@using Radzen
@using Radzen.Blazor
@inject NavigationManager NavMan
@inject PageService pageService
@inject DBService DBservice

<h3>@post.Description</h3>

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-6">
            <div id="myCarousel" class="carousel" data-interval="0"i data-ride="carousel"  style="width:100%">
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img src="@pageService.img[0].ImagePath" alt="Image 1" style="max-height:auto; width:100%">
                    </div>
                    @for (int i = 1; i < pageService.img.Count; ++i)
                    {
                        <div class="carousel-item">
                            <img src="@pageService.img[i].ImagePath" alt="Image 2" style="max-height:auto; width:100%">
                        </div>
                    }
                </div>
                <ol class="carousel-indicators">
                    <li class="active" data-target="#myCarousel" data-slide-to=0></li>
                    @for (int i = 1; i < pageService.img.Count; ++i)
                    {
                        <li class="inactive" data-target="#myCarousel" data-slide-to=@i></li>
                    }
                </ol>

                <a class="carousel-control-prev" href="#myCarousel" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Previous</span>
                </a>
                <a class="carousel-control-next" href="#myCarousel" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Next</span>
                </a>
            </div>
            <p><b>@post.Pay €</b></p>

            <li> Height: @post.Height </li>
            <li> Width: @post.Width </li>
            <li> Length: @post.Length </li>
            <li>Weight: @post.Weight </li>
        </div>
        <div class="col-sm-6">
            <RadzenGoogleMap style="width:500px; height:500px" Zoom="@zoom" ApiKey="AIzaSyBZ4535dtJv01oQ5jTzBPOJkdz2WVtzOPY" Center="@(new GoogleMapPosition() {  Lat = @post.AddressLat, Lng = post.AddressLng })">
                <Markers>
                    <RadzenGoogleMapMarker Title="Pick Up Location" Label="Pick Up Location" Position="@(new GoogleMapPosition() { Lat = post.AddressLat, Lng = post.AddressLng })" />
                    <RadzenGoogleMapMarker style="10" Title="Savartynas" Label="Savartynas" Position="@(new GoogleMapPosition() { Lat = 54.69110901324764, Lng = 25.466429088366166})" />
                </Markers>
            </RadzenGoogleMap>
            <br />   
            <a class="button" href="https://www.google.com/search?q=" onclick="location.href=this.href+'@post.AddressLat '+'@post.AddressLng';return false;">Open in google maps</a>
            <a class="button" href="https://www.google.com/maps/dir//" onclick="location.href=this.href+'@post.AddressLat '+'@post.AddressLng';return false;">Open in google dir</a>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }

    Posts post;
    int zoom = 12;
    double lat;
    double lng;
    private string selectedSlide = "2";

    protected override async Task OnInitializedAsync()
    {
        var uri = NavMan.ToAbsoluteUri(NavMan.Uri);

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("Value", out var value))
        {
            id = int.Parse((string)value.First());
        }

        post = DBservice.GetThisPostsAsync(id);
        pageService.img = await DBservice.GetThisImagesAsync(id);
    }
}

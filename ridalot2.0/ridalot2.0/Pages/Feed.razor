@page "/feed"
@using System.Collections
@using Data
@inject NavigationManager NavMan
@using System.Text.Json
@using System.Text.Json.Serialization
@inherits LoginControl

<h3>Feed</h3>

<table class="table">
	<thead>
		<tr>
			<th>Date uploaded</th>
			<th>Image</th>
			<th>Description</th>
			<th>Measurements</th>
			<th>Estimated price (€)</th>
			<th>Address</th>
			<th>Take tasks</th>
		</tr>
	</thead>
	<tbody>
			@foreach (Post post in Filter)
			{
				<tr>
					<td>@post.Time (UTC)</td>
					<td><img src="@post.Image" style="height:100px; max-width: 200px;" /></td>
					<td>@post.Description</td>
					<td>
						Weight: @post.Height<br />
						Width: @post.Width<br />
						Length: @post.Length<br />
						Weight: @post.Weight<br />
					</td>
					<td>@post.Pay</td>
					<td>@post.Address</td>
					<td> <button type="submit" class="btn btn-success" @onclick="()=>Clicked(post)">Accept the task</button> </td>
				</tr>
			}
	</tbody>
</table>

@if (popup)
{
	<AdPopUp Title="Task"
		 Text="Task accepted succesfully!"
		 OnClose="@ClosePopup"
		 DialogType="AdPopUp.ModalDialogType.Ok">
	</AdPopUp>
}@if (popup1)
{
	<AdPopUp Title="Can't take the task'"
		 Text="You are not a worker yet, go to profile to apply!"
		 OnClose="@ClosePopup">
	</AdPopUp>
}


@code {
	DateTime now = DateTime.Now.ToUniversalTime();
	public bool popup { get; set; } = false;
	public bool popup1 { get; set; } = false;
	private int n = 0;
	ReadPost<Post> json = new ReadPost<Post>();
	ReadPost<Worker> worker = new ReadPost<Worker>();
	IEnumerable<Post> Filter;
	protected override async Task OnInitializedAsync()
	{
		
		
			json.LoadJson("PostInfo.json");
			Filter =
			from Status in json.posts
			where Status.Status == Data.Status.Waiting
			select Status;
		
	}
	public void Clicked(Post post)
	{

		worker.LoadJson("WorkerInfo.json");
		if (worker.posts == null)
		{
			popup1 = true;
		}
		else
		{
			post.Worker = c.Email;
			post.Status = Status.InProgress;
			string jsonString = JsonSerializer.Serialize(json.posts);
			File.WriteAllText("PostInfo.json", jsonString);
			popup = true;
		}

	}
	private async Task ClosePopup(bool accepted)
	{
		popup = false;
		popup1 = false;
		StateHasChanged();
		NavMan.NavigateTo("/");
	}
}
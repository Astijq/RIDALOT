@using System.Security.Claims
@using Microsoft.AspNetCore.Http
@using Data
@inject IHttpContextAccessor _httpContextAccessor
@inject HttpClient Http
@inject NavigationManager NavMan

@if (@User.Identity.IsAuthenticated)
{
	<img src="@Avatar" style="height:50px;max-width:50px;width:auto; border-radius: 10px;" />
	<b style="padding:20px">@GivenName @Surname</b>
	<a class="button" href="/Identity/Logout" target="_top" style="text-decoration: none">Logout</a>
}
else
{
	<a class="button" href="/Identity/Login" target="_top" style="text-decoration: none">Login</a>
}
@code {
	public ClaimsPrincipal? User { get; set; }
	public string? GivenName { get; set; }
	public string? Surname { get; set; }
	public string? Avatar { get; set; }
	public string? Email { get; set; }

	protected override void OnInitialized()
	{
		base.OnInitialized();
		if (_httpContextAccessor.HttpContext != null)
			try
			{
				// Set the user to determine if they are logged in

				User = _httpContextAccessor.HttpContext.User;
				//email
				var givenEmail = _httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.Email);
				if (givenEmail != null)
				{
					Email = givenEmail.Value;
				}
				else
				{
					Email = "";
				}
				// Try to get the GivenName
				var givenName = _httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.GivenName);
				if (givenName != null)
				{
					GivenName = givenName.Value;
				}
				else
				{
					GivenName = User.Identity.Name;
				}
				// Try to get the Surname
				var surname = _httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.Surname);
				if (surname != null)
				{
					Surname = surname.Value;
				}
				else
				{
					Surname = "";
				}
				// Try to get Avatar
				var avatar = _httpContextAccessor.HttpContext.User.FindFirst("urn:google:image");
				if (avatar != null)
				{
					Avatar = avatar.Value;
				}
				else
				{
					Avatar = "";
				}
			}
			catch { }
	}

}
